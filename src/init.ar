term.log("                                        ____ ")
term.log("     /\\                                |___ \\ ")
term.log("    /  \\   _ __ __ _  ___  _ __   __   ____) |")
term.log("   / /\\ \\ | '__/ _` |/ _ \\| '_ \\  \\ \\ / /__ < ")
term.log("  / ____ \\| | | (_| | (_) | | | |  \\ V /___) |")
term.log(" /_/    \\_\\_|  \\__, |\\___/|_| |_|   \\_/|____/ ")
term.log("                __/ |                         ")
term.log("               |___/                          ")
term.log("----------------------------------------------")
term.log("Welcome to ARGON!")

input.pause()
term.clear()

# ARGON 3 is a math-driven programming language designed to make code easy to read and write. It's not meant to be fast, as it's interpreted. This specification should be used as a guideline, and is subject to change for later versions. Later updates for Argon 3 should be backwards compatible (where possible) with code designed for older versions of the interpreter.

# why use argon?
term.log("ðŸ¤” Why use Argon?")
term.log()
term.log("ARGON 3 is a math-driven programming language")
term.log("designed to make code easy to read and write.")
term.log("It's not meant to be fast, as it's interpreted.")
term.log()
term.log("ðŸ“š Features")
term.log("   - Easy to read and write: Argon 3 is designed with clarity of code in mind, making it easier for you and others to read and write code.")
term.log("   - All numbers are stored as rational numbers, preventing precision errors.")
term.log("   - Math-driven: Designed for mathematical computations, Argon 3 uses techniques and rules set in maths. It's designed to be easy for mathematicians to write and understand algorithms in.")
term.log("   - Interpreted: Argon 3 is an interpreted language, so you don't need to compile your code before running it.")
term.log("   - Cross-platform: Argon 3 can be run on any platform that has an interpreter for it.")
term.log("   - Lightweight: The Argon 3 interpreter is small and doesn't require a lot of system resources to run.")

term.log()
input.pause()
term.clear()

term.log("ðŸš€ Example Code")
term.log()
term.log("Here's an example of how to define a function in Argon 3:")
term.log()
term.log("f(x) = x^2 + 2*x + 1")
term.log("term.log('f(10) =', f(10))")
term.log("\n")
input.pause()
term.clear()

# license: MIT
term.log("ðŸ“œ License")
term.log()
term.log("MIT License\n\nCopyright (c) 2022 Open Argon")
term.log()
term.log("Permission is hereby granted, free of charge, to any person obtaining a copy")
term.log("of this software and associated documentation files (the \"Software\"), to deal")
term.log("in the Software without restriction, including without limitation the rights")
term.log("to use, copy, modify, merge, publish, distribute, sublicense, and/or sell")
term.log("copies of the Software, and to permit persons to whom the Software is")
term.log("furnished to do so, subject to the following conditions:")
term.log("The above copyright notice and this permission notice shall be included in all")
term.log("copies or substantial portions of the Software.")
term.log()
term.log("THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR")
term.log("IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,")
term.log("FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE")
term.log("AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER")
term.log("LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,")
term.log("OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE")
term.log("SOFTWARE.")
term.log()
term.log("remember this is subject to change and this version is not guaranteed to be up to date,\nalways check the latest version of the license agreement at https://raw.githubusercontent.com/Open-Argon/argon-v3/master/licence")
term.log()
input.pause()
term.clear()